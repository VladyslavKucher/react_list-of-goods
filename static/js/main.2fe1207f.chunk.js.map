{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","firstGood","secondGood","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","sortAlphabetically","setState","sortByLength","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAsBzB,OApBAG,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQL,GACN,KAAMJ,EAASU,SACb,OAAOF,EAAUG,cAAcF,GAEjC,KAAMT,EAASY,OACb,OAAOJ,EAAUK,OAASJ,EAAWI,OAEvC,QACE,OAAO,MAITR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SArCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAMiB,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CACZjB,SAAUJ,EAASU,YARzB,EAYEY,aAAe,WACb,EAAKD,SAAS,CACZjB,SAAUJ,EAASY,UAdzB,EAkBEE,QAAU,WACR,EAAKO,UAAS,SAAAH,GAAK,MAAK,CACtBb,YAAaa,EAAMb,gBApBzB,EAwBEkB,MAAQ,WACN,EAAKF,SAAS,CACZhB,YAAY,EACZD,SAAUJ,EAASmB,QA3BzB,4CA+BE,WACE,MAGIK,KAAKN,MAFPb,EADF,EACEA,WACAD,EAFF,EAEEA,SAGF,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBrB,IAAaJ,EAASU,SAAW,GAAK,YACnEiB,QAASH,KAAKJ,mBAHhB,iCAQA,wBACEM,KAAK,SACLD,UAAS,yBAAoBrB,IAAaJ,EAASY,OAAS,GAAK,YACjEe,QAASH,KAAKF,aAHhB,4BAQA,wBACEI,KAAK,SACLD,UAAS,yBAAoBpB,EAAa,GAAK,YAC/CsB,QAASH,KAAKV,QAHhB,qBAUIT,GACGD,IAAaJ,EAASU,UACtBN,IAAaJ,EAASY,OAGvB,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,MAHhB,mBAQA,MAKR,6BACE,6BACGrB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CuB,KAAI,SAAAC,GAAI,OACP,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBA1FvB,GAAyBC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2fe1207f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case (SortType.ALPHABET):\n        return firstGood.localeCompare(secondGood);\n\n      case (SortType.LENGTH):\n        return firstGood.length - secondGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-info ${isReversed ? '' : 'is-light'}`}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {\n            (\n              isReversed\n              || sortType === SortType.ALPHABET\n              || sortType === SortType.LENGTH\n            )\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n              )\n              : ''\n          }\n\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n              .map(good => (\n                <li\n                  data-cy=\"Good\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}